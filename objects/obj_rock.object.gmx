<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_angle = point_direction(x, y, min(864, mouse_x), mouse_y);
length = point_distance(x, y, min(864, mouse_x), mouse_y);

xDir = (min(864, mouse_x) - x) / length;
yDir = (mouse_y - y) / length;
endX = min(864, mouse_x);
endY = mouse_y;
spd = 5;
destroy = 0;
image_speed = .5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(x == endX &amp;&amp; y == endY) {
    destroy++;
    if(destroy == 3 * room_speed) {
        instance_destroy();
    }
}
else if(point_distance(x, y, endX, endY) &lt; 5) {
    x = endX;
    y = endY;
    image_xscale = 1;
    image_yscale = 1;
    image_speed = 0;
    if(position_meeting(x, y, obj_walker)) {
        with(instance_position(x, y, obj_walker)) {
            if(hp &gt; 50) {
                part_particles_create(global.system, x + sign(xDir), y + sign(yDir), global.bloodPart, 3);
            }
            else {
                part_particles_create(global.system, x + sign(xDir), y + sign(yDir), global.bloodPart, 10);
            }
            hp -= 50;
        }
    }
    else {
        part_particles_create(global.system, x, y, global.dirtPart, 10);
    }
}
else if(point_distance(x, y, endX, endY) &gt; length / 2) {
    image_xscale += .05;
    image_yscale += .05;
    x += (spd * xDir);
    y += (spd * yDir);
}
else if(point_distance(x, y, endX, endY) &lt; length / 2) {
    image_xscale -= .05;
    image_yscale -= .05;
    x += (spd * xDir);
    y += (spd * yDir);
}
else {
    x += (spd * xDir);
    y += (spd * yDir);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
